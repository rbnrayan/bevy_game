use bevy::{prelude::*, ecs::component::TableStorage};

pub struct ResourceCounterPlugin;

impl Plugin for ResourceCounterPlugin {
    fn build(&self, app: &mut App) {
        app.insert_resource(ResourcesToCount(vec![
            (Box::new(CoinResource), String::from("coin.png")),
            (Box::new(WoodLogResource), String::from("wood_log.png")),
        ]))
        .add_startup_system(spawn_resource_counter);
    }
}

type Path = String;

pub struct ResourcesToCount(pub Vec<(Box<dyn Component<Storage = TableStorage>>, Path)>);

#[derive(Component)]
pub struct ResourceCounter(pub u32);

#[derive(Component)]
#[component(storage = "Table")]
pub struct CoinResource;

#[derive(Component)]
#[component(storage = "Table")]
pub struct WoodLogResource;

fn spawn_resource_counter(
    mut commands: Commands,
    mut windows: ResMut<Windows>,
    asset_server: Res<AssetServer>,
    resources: Res<ResourcesToCount>,
) {
    let resources_vec: Vec<&dyn Component<Storage = TableStorage>> = vec![&CoinResource, &WoodLogResource];
    let window = windows.primary();

    let pos_y = window.height() / 2.1;
    let pos_x = window.width() / 2.2;

    for (resource, sprite_path) in resources.0 {
        let resource_sprite = commands
            .spawn_bundle(SpriteBundle {
                sprite: Sprite {
                    color: Color::rgba(1.0, 1.0, 1.0, 0.9),
                    ..Default::default()
                },
                texture: asset_server.load(&sprite_path),
                transform: Transform::from_xyz(pos_x, pos_y, 50.0),
                ..Default::default()
            })
            .id();
        let resource_text = commands
            .spawn_bundle(Text2dBundle {
                text: Text::with_section(
                    "0",
                    TextStyle {
                        font: asset_server.load("fonts/Fixedsys Excelsior 3.01 Regular.ttf"),
                        font_size: 15.0,
                        color: Color::WHITE,
                    },
                    TextAlignment {
                        horizontal: HorizontalAlign::Center,
                        ..Default::default()
                    },
                ),
                transform: Transform::from_xyz(-25.0, 9.0, 50.0),
                ..Default::default()
            })
            .insert(ResourceCounter(0))
            .id();

        commands
            .entity(resource_sprite)
            .add_child(resource_text)
            .insert(resources_vec[0]);
    }
}
